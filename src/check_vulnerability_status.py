# from attempt_exploit import attempt_exploit

def check_vulnerability_status(vulnerability_report):
    """
    Conducts a comprehensive vulnerability status check on the report 

    Args:
        vulnerability_report (dict): Vulnerability report from previous analysis
        (vulnerability analysis). If the vulnerability exists it will be sent into the
        exploitation stage, else, the findings are appended to the final report. (return)

    Returns:
        dict: Report that indicates whether the vulnerability exists/not
    """

    final_report = {
        "risk_level": vulnerability_report["risk_level"],
        "total_devices": vulnerability_report["total_devices"],
        "vulnerable_devices": vulnerability_report["vulnerable_devices"],
        "vulnerability_status": []
    }

    for device_report in vulnerability_report["device_reports"]:
        device_status = {
            "ip_address": device_report["ip_address"],
            "operating_system": device_report["OS"],
            "vulnerabilities": device_report["vulnerabilities"],
            "risk_level": device_report["risk_level"],
            "status": "Vulnerable" if device_report["vulnerabilities"] else "Not Vulnerable"
        }

        # If vulnerabilities exist, send to exploitation stage
        if device_status["status"] == "Vulnerable":
            # attempt_exploit(vulnerability_report)
            device_status["next_stage"] = "Exploitation"
        else:
            device_status["next_stage"] = "No Further Action"

        final_report["vulnerability_status"].append(device_status)

    return final_report

# from information_gathering import information_gathering
# logs = information_gathering()
# #print(logs)
# from vulnerability_analysis import vulnerability_analysis
# data = (vulnerability_analysis(logs))
# print(check_vulnerability_status(data))
