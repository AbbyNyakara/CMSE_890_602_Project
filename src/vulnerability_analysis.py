def vulnerability_analysis(network_logs):
    """
    Analyses network logs for vulnerabilities and generates report

    Function takes the network logs from information_gathering() step as input, 
    evaluates information for potential vulnerabilities, and creates a report

    Args:
        list(logs): A list of dictionaries containing network device information

    Returns:
        dict: A vulnerability report containing:
            - overall_risk_level: High, Medium, or Low
            - vulnerable_devices: Count of devices with vulnerabilities
            - total_decices: The total number of devices analysed. 
            - device_reports: Detailed vulnerability information for each device
    """

    vulnerability_report = {
        "risk_level": "Low",
        "vulnerable_devices": 0,
        "total_devices": len(network_logs),
        "device_reports": []
    }

    high_risk = 0

    for device in network_logs:
        device_report = {
            "ip_address": device["ip_address"],
            "OS": device["operating_system"],
            "vulnerabilities": device["potential_vulnerabilities"],
            "risk_level": "Low"
        }

        if len(device["potential_vulnerabilities"]) > 2:
            device_report["risk_level"] = "high"
            high_risk += 1
        elif len(device["potential_vulnerabilities"]) > 0:
            device_report["risk_level"] = "medium"

        if device["potential_vulnerabilities"]:
            vulnerability_report["vulnerable_devices"] += 1

        vulnerability_report["device_reports"].append(device_report)

    if high_risk > 2:
        vulnerability_report["risk_level"] = "High"
    elif high_risk > 0:
        vulnerability_report["risk_level"] = "Medium"

    return vulnerability_report


from information_gathering import information_gathering
logs = information_gathering()
#print(logs)
print(vulnerability_analysis(logs))
