configfile: 'config.yaml'


rule all:
    input:
        "output/pentest_planning_report.txt",
        "output/information_gathering_report.json",
        "output/vulnerability_analysis_report.json",
        "output/final_vulnerability_status_report.json",
        "output/exploit_attempt_report.json",
        "output/exploitation_status_report.json",

rule planning_and_preparation:
    input:
        script = "scripts/planning_and_preparation.py"
    output:
        "output/pentest_planning_report.txt"
        # config["output_dir"] + "/pentest_planning_report" + ".txt"
    shell:
        """
        {input.script}
        """

rule information_gathering:
    input:
        script = "scripts/information_gathering.py"
    output:
        "output/information_gathering_report.json" #edited script to output json
    params:
        file = "data/network_log_data.json"
    shell:
        """
        {input.script} {params.file}
        """

rule vulnerability_analysis:
    input:
        script = "scripts/vulnerability_analysis.py",
        archive = "output/information_gathering_report.json"
    output:
        "output/vulnerability_analysis_report.json"
    params:
        file = "output/information_gathering_report.json" # this is theoutput from info gathering: 
    shell:
        # """
        # python {input.script} {params.file} {output}
        # """
        "{input.script} {params.file} {output}"
        

rule check_vulnerability_status:
    input:
        script = "scripts/check_vulnerability_status.py",
        archive = "output/vulnerability_analysis_report.json"
    output:
        "output/final_vulnerability_status_report.json"
    run:
        """
        python {input.script} {params.file} {output}
        """

rule attempt_exploit:
    input:
        script = "scripts/attempt_exploit.py",
        archive = "output/vulnerability_analysis_report.json"
    output:
        "output/exploit_attempt_report.json"
    run:
        # attempt_exploit(input[0], output[0])
        """
        python {input.script} {params.file} {output}
        """

rule check_exploitation_status:
    input:
        script = "scripts/check_exploitation_status.py",
        archive = "output/exploit_attempt_report.json"
    output:
        "output/exploitation_status_report.json"
    log:
        "logs/check_exploitation_status.log"
    run:
       
        """
        {input.script}
        """

